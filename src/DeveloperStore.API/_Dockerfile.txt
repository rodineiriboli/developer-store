# Acesse https://aka.ms/customizecontainer para saber como personalizar seu contêiner de depuração e como o Visual Studio usa este Dockerfile para criar suas imagens para uma depuração mais rápida.

# Esta fase é usada durante a execução no VS no modo rápido (Padrão para a configuração de Depuração)
FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS base
USER $APP_UID
WORKDIR /app
EXPOSE 8080
EXPOSE 8081


# Esta fase é usada para compilar o projeto de serviço
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
ARG BUILD_CONFIGURATION=Release
WORKDIR /src
COPY ["src/DeveloperStore.API/DeveloperStore.API.csproj", "src/DeveloperStore.API/"]

# Restore dependencies and install EF tool
RUN dotnet restore "./src/DeveloperStore.API/DeveloperStore.API.csproj" && \
    dotnet tool install --global dotnet-ef

# Add dotnet tools to PATH
ENV PATH="$PATH:/root/.dotnet/tools"

COPY . .
WORKDIR "/src/src/DeveloperStore.API"
RUN dotnet build "./DeveloperStore.API.csproj" -c $BUILD_CONFIGURATION -o /app/build

# Esta fase é usada para publicar o projeto de serviço a ser copiado para a fase final
FROM build AS publish
ARG BUILD_CONFIGURATION=Release
RUN dotnet publish "./DeveloperStore.API.csproj" -c $BUILD_CONFIGURATION -o /app/publish /p:UseAppHost=false

# Esta fase é usada na produção ou quando executada no VS no modo normal (padrão quando não está usando a configuração de Depuração)
FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .

# Install EF tool
RUN dotnet tool install --global dotnet-ef
ENV PATH="$PATH:/root/.dotnet/tools"

# Install netcat para verificar conexão com banco
RUN apt-get update && apt-get install -y netcat-openbsd && rm -rf /var/lib/apt/lists/*

# Copy entrypoint script
COPY src/DeveloperStore.API/entrypoint.sh /app/entrypoint.sh
RUN chmod +x /app/entrypoint.sh

# Create SSL certificate directory and set permissions
RUN mkdir -p /https && chmod 700 /https

ENTRYPOINT ["dotnet", "DeveloperStore.API.dll"]